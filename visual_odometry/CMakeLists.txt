cmake_minimum_required(VERSION 2.8)
project(vo)

set(CMAKE_BUILD_TYPE "Release")
add_definitions("-DENABLE_SSE")
set(CMAKE_CXX_FLAGS "-std=c++17 -O2 ${SSE_FLAGS} -msse4")
list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

find_package(OpenCV 4 REQUIRED)
find_package(G2O REQUIRED)
find_package(Sophus REQUIRED)
find_package(Matplot++ REQUIRED)

include_directories(
        ${OpenCV_INCLUDE_DIRS}
        ${G2O_INCLUDE_DIRS}
        ${Sophus_INCLUDE_DIRS}
        "/home/ryan/github_repository/robot_SLAM/visual_odometry/"
        "/usr/include/eigen3/"
)

add_executable(main main.cpp)
add_library(util util.cpp)
add_library(mono_vo mono_vo.cpp)
target_link_libraries(main ${OpenCV_LIBS})
target_link_libraries(main util)
target_link_libraries(main mono_vo)

#add_executable(orb_cv orb_cv.cpp)
#target_link_libraries(orb_cv ${OpenCV_LIBS})

#add_executable(orb_self orb_self.cpp)
#target_link_libraries(orb_self ${OpenCV_LIBS})

# add_executable( pose_estimation_2d2d pose_estimation_2d2d.cpp extra.cpp ) # use this if in OpenCV2 
#add_executable(pose_estimation_2d2d pose_estimation_2d2d.cpp)
#target_link_libraries(pose_estimation_2d2d ${OpenCV_LIBS})

# # add_executable( triangulation triangulation.cpp extra.cpp) # use this if in opencv2
#add_executable(triangulation triangulation.cpp)
#target_link_libraries(triangulation ${OpenCV_LIBS})

#find_package(fmt)

#add_executable(pose_estimation_3d2d pose_estimation_3d2d.cpp)
#target_link_libraries(pose_estimation_3d2d fmt::fmt)
#target_link_libraries(pose_estimation_3d2d
#        g2o_core g2o_stuff
#        ${OpenCV_LIBS})

#add_executable(pose_estimation_3d3d pose_estimation_3d3d.cpp)
#target_link_libraries(pose_estimation_3d3d fmt::fmt)
#target_link_libraries(pose_estimation_3d3d
#        g2o_core g2o_stuff
#        ${OpenCV_LIBS})
